# Based on the workflow by by BrandonP from https://github.com/mikemorran/hubs/blob/master/.github/workflows/ce-build.yml
# input masking referenced from https://dev.to/leading-edje/masking-input-parameters-in-github-actions-1ci

name: custom-docker-build-push

on:
  workflow_dispatch:
    inputs:
      Registry_Base_URL:
        type: string
      Registry_Username:
        type: string
      Registry_Password:
        type: string
      Registry_Namespace:
        type: string
      Image_Tag:
        type: string
      Dockerfile:
        type: string
      codePath:
        type: string

# Add in default values for the inputs plus define any missing variables we need.
# Everything should take their values from env rather than inputs.
env:
  Registry_Base_URL: ${{ inputs.Registry_Base_URL || vars.REGISTRY_BASE_URL }}
# Registry_Username: This must be added in each job that needs it.
# Registry_Password: This must be added in each job that needs it.
  Registry_Namespace: ${{ inputs.Registry_Namespace || vars.REGISTRY_NAMESPACE }}
  Image_Tag: ${{ inputs.Image_Tag || github.ref_name }}
  Dockerfile: ${{ inputs.Dockerfile || 'RetPageOriginDockerfile' }}
  codePath: ${{ inputs.codePath }}
# repo_name: This must be added in each job that needs it.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Assign username from secret
        if: ${{ inputs.Registry_Username == ''}}
        run: |
          echo "Registry_Username=${{ secrets.REGISTRY_USERNAME }}" >> "$GITHUB_ENV"

      - name: Assign username from input
        if: ${{ inputs.Registry_Username != ''}}
        run: |
          USERNAME=$(jq -r '.inputs.Registry_Username' $GITHUB_EVENT_PATH)
          echo ::add-mask::$USERNAME
          echo Registry_Username=$USERNAME >> $GITHUB_ENV

      - name: Assign password from secret
        if: ${{ inputs.Registry_Password == ''}}
        run: |
          echo "Registry_Password=${{ secrets.REGISTRY_PASSWORD }}" >> "$GITHUB_ENV"

      - name: Assign password from input
        if: ${{ inputs.Registry_Password != ''}}
        run: |
          PASSWORD=$(jq -r '.inputs.Registry_Password' $GITHUB_EVENT_PATH)
          echo ::add-mask::$PASSWORD
          echo Registry_Password=$PASSWORD >> $GITHUB_ENV

      - name: Add the repository name as an env variable
        run: |
          echo "repo_name=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_ENV"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.Registry_Base_URL }}
          username: ${{ env.Registry_Username }}
          password: ${{ env.Registry_Password }}

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: "./repo"

      - name: Use codePath for multirepo
        if: ${{ env.codePath != ''}}
        run: |
          mkdir ./_repo
          cp -rf ./repo/${{ env.codePath }}/* ./_repo
          rm -rf ./repo
          mv ./_repo ./repo
          ls ./repo

      - name: Docker Buildx setup
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Docker Build and Push
        uses: docker/build-push-action@v6
        with:
          context: repo/
          file: repo/${{ env.Dockerfile }}
          tags: ${{ env.Registry_Base_URL }}/${{ env.Registry_Namespace }}/${{ env.repo_name }}:${{ env.Image_Tag }}-latest,${{ env.Registry_Base_URL }}/${{ env.Registry_Namespace }}/${{ env.repo_name }}:${{ env.Image_Tag }}-${{ github.run_number }}
          cache-from: type=registry,ref=${{ env.Registry_Base_URL }}/${{ env.Registry_Namespace }}/${{ env.repo_name }}:buildcache
          cache-to: type=registry,ref=${{ env.Registry_Base_URL }}/${{ env.Registry_Namespace }}/${{ env.repo_name }}:buildcache,mode=max
          push: true
